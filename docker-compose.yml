services:
  transactions:
    build:
      context: .
      dockerfile: ./apps/transactions/Dockerfile
      target: development
    restart: unless-stopped
    container_name: transactions
    hostname: transactions
    command: npm run start:dev transactions
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/transactions/.env
    depends_on:
      - mongo
      - rabbitmq
      - cashbacks
      - rewards
      - partners
      - notifications
      - wallets
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'

  cashbacks:
    build:
      context: .
      dockerfile: ./apps/cashbacks/Dockerfile
      target: development
    restart: unless-stopped
    container_name: cashbacks
    hostname: cashbacks
    command: npm run start:dev cashbacks
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/cashbacks/.env
    depends_on:
      - mongo
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'

  rewards:
    build:
      context: .
      dockerfile: ./apps/rewards/Dockerfile
      target: development
    restart: unless-stopped
    container_name: rewards
    hostname: rewards
    command: npm run start:dev rewards
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/rewards/.env
    depends_on:
      - mongo
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'

  partners:
    build:
      context: .
      dockerfile: ./apps/partners/Dockerfile
      target: development
    restart: unless-stopped
    container_name: partners
    hostname: partners
    command: npm run start:dev partners
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/partners/.env
    depends_on:
      - mongo
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3003:3003'

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    restart: unless-stopped
    container_name: notifications
    hostname: notifications
    command: npm run start:dev notifications
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/notifications/.env
    depends_on:
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  wallets:
    build:
      context: .
      dockerfile: ./apps/wallets/Dockerfile
      target: development
    restart: unless-stopped
    container_name: wallets
    hostname: wallets
    command: npm run start:dev wallets
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/wallets/.env
    depends_on:
      - mongo
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3004:3004'

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    restart: unless-stopped
    container_name: auth
    hostname: auth
    command: npm run start:dev auth
    environment:
      TZ: "Asia/Jakarta"
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3005:3005'

  rabbitmq:
    image: rabbitmq
    restart: on-failure
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '5672:5672'

  mongo:
    image: mongo
    restart: on-failure
    container_name: mongo
    hostname: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: superuser
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - '27017:27017'